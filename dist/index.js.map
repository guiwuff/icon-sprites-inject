{"version":3,"file":"index.js","sources":["../src/sprite-injector.ts"],"sourcesContent":["// This will automatically inject the SVG symbol defs\n// to be use via <use>\n\nconst SVGSpriteInject = injectSprites(document);\n\nfunction injectSprites(document: HTMLDocument) {\n  const CREATE_ELEMENT = 'createElement';\n  const A_ELEMENT = document[CREATE_ELEMENT]('a');\n  const DIV_ELEMENT = document[CREATE_ELEMENT]('div');\n\n  function load(path: string, callback, errorCallback) {\n    if (path) {\n      const req = new XMLHttpRequest();\n      req.onreadystatechange = function() {\n        if (req.readyState == 4 &&\n          req.status == 200) {\n            callback(req.responseText);\n          }\n      }\n      req.onerror = errorCallback;\n      req.open('GET', path, true);\n      req.send();\n    }\n  }\n\n  function buildSvgSprite(svgSpriteStr: string, absUrl: string) {\n    DIV_ELEMENT.innerHTML = svgSpriteStr;\n    const svg = DIV_ELEMENT.removeChild(DIV_ELEMENT.firstChild).cloneNode(true);\n    svg['style'] = 'display:none';\n    svg['data-inject-url'] = absUrl;\n    return svg;\n  }\n\n  function getAbsoluteUrl(url): string {\n    A_ELEMENT.href = url;\n    return A_ELEMENT.href;\n  }\n\n  function applyAllOptions(optionKey, optionsArr, func) {\n    for (let i = 0; i < optionsArr.length; ++i) {\n      const options = optionsArr[i];\n      if (options.hasOwnProperty(optionKey)){\n        func(options[optionKey]);\n      }\n    }\n  }\n\n  // const spriteHandlerMap = {};\n  const cachedMap = {};\n\n  function SVGSpriteInject(path: string, options) {\n    options = options || {};\n    const absUrl = getAbsoluteUrl(path);\n    let cached = cachedMap[absUrl];\n\n    if (cached) {\n      const svgSprite = cached.svgSprite;\n      if (svgSprite) {\n        if (options.onInjected) {\n          options.onInjected(svgSprite);\n        }\n      } else {\n        cached.optionsArr.push(options);\n      }\n    } else {\n      let removed = false;\n\n      cachedMap[absUrl] = cached = {\n        spriteHandler: {\n          remove: function() {\n            if (!removed) {\n              let cachedSvgSprite = cached.svgSprite;\n              if (cachedSvgSprite) {\n                const parentNode = cachedSvgSprite.parentNode;\n                parentNode && parentNode.removeChild(cachedSvgSprite);\n                cached.svgSprite = null;\n              }\n              delete cachedMap[absUrl];\n              removed = true;\n            }\n          }\n        },\n        svgSprite: null,\n        optionsArr: [options]\n      };\n\n      load(path, function(svgSpriteStr) {\n        let svgSprite = buildSvgSprite(svgSpriteStr, absUrl);\n        if (!removed) {\n          cached.svgSprite = svgSprite;\n          document.documentElement.appendChild(svgSprite);\n          applyAllOptions('afterInject', cached.optionsArr, function (afterInject) {\n            afterInject(svgSprite);\n          });\n        }\n      }, function(e) {\n        applyAllOptions('onLoadFail', cached.optionsArr, function(onLoadFail) {\n          onLoadFail(e);\n        });\n      });\n    }\n    return cached.spriteHandler;\n  };\n\n  return SVGSpriteInject;\n}\n\n// Inject the sprites\nSVGSpriteInject('assets/sprites.svg', {});\n"],"names":[],"mappings":";;;EAAA;EACA;EAEA,MAAM,eAAe,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;EAEhD,SAAS,aAAa,CAAC,QAAsB;MAC3C,MAAM,cAAc,GAAG,eAAe,CAAC;MACvC,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC;MAChD,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC;MAEpD,SAAS,IAAI,CAAC,IAAY,EAAE,QAAQ,EAAE,aAAa;UACjD,IAAI,IAAI,EAAE;cACR,MAAM,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;cACjC,GAAG,CAAC,kBAAkB,GAAG;kBACvB,IAAI,GAAG,CAAC,UAAU,IAAI,CAAC;sBACrB,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;sBACjB,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;mBAC5B;eACJ,CAAA;cACD,GAAG,CAAC,OAAO,GAAG,aAAa,CAAC;cAC5B,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;cAC5B,GAAG,CAAC,IAAI,EAAE,CAAC;WACZ;OACF;MAED,SAAS,cAAc,CAAC,YAAoB,EAAE,MAAc;UAC1D,WAAW,CAAC,SAAS,GAAG,YAAY,CAAC;UACrC,MAAM,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;UAC5E,GAAG,CAAC,OAAO,CAAC,GAAG,cAAc,CAAC;UAC9B,GAAG,CAAC,iBAAiB,CAAC,GAAG,MAAM,CAAC;UAChC,OAAO,GAAG,CAAC;OACZ;MAED,SAAS,cAAc,CAAC,GAAG;UACzB,SAAS,CAAC,IAAI,GAAG,GAAG,CAAC;UACrB,OAAO,SAAS,CAAC,IAAI,CAAC;OACvB;MAED,SAAS,eAAe,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI;UAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;cAC1C,MAAM,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;cAC9B,IAAI,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,EAAC;kBACpC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;eAC1B;WACF;OACF;;MAGD,MAAM,SAAS,GAAG,EAAE,CAAC;MAErB,SAAS,eAAe,CAAC,IAAY,EAAE,OAAO;UAC5C,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;UACxB,MAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;UACpC,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;UAE/B,IAAI,MAAM,EAAE;cACV,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;cACnC,IAAI,SAAS,EAAE;kBACb,IAAI,OAAO,CAAC,UAAU,EAAE;sBACtB,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;mBAC/B;eACF;mBAAM;kBACL,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;eACjC;WACF;eAAM;cACL,IAAI,OAAO,GAAG,KAAK,CAAC;cAEpB,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG;kBAC3B,aAAa,EAAE;sBACb,MAAM,EAAE;0BACN,IAAI,CAAC,OAAO,EAAE;8BACZ,IAAI,eAAe,GAAG,MAAM,CAAC,SAAS,CAAC;8BACvC,IAAI,eAAe,EAAE;kCACnB,MAAM,UAAU,GAAG,eAAe,CAAC,UAAU,CAAC;kCAC9C,UAAU,IAAI,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;kCACtD,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;+BACzB;8BACD,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC;8BACzB,OAAO,GAAG,IAAI,CAAC;2BAChB;uBACF;mBACF;kBACD,SAAS,EAAE,IAAI;kBACf,UAAU,EAAE,CAAC,OAAO,CAAC;eACtB,CAAC;cAEF,IAAI,CAAC,IAAI,EAAE,UAAS,YAAY;kBAC9B,IAAI,SAAS,GAAG,cAAc,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;kBACrD,IAAI,CAAC,OAAO,EAAE;sBACZ,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;sBAC7B,QAAQ,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;sBAChD,eAAe,CAAC,aAAa,EAAE,MAAM,CAAC,UAAU,EAAE,UAAU,WAAW;0BACrE,WAAW,CAAC,SAAS,CAAC,CAAC;uBACxB,CAAC,CAAC;mBACJ;eACF,EAAE,UAAS,CAAC;kBACX,eAAe,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,EAAE,UAAS,UAAU;sBAClE,UAAU,CAAC,CAAC,CAAC,CAAC;mBACf,CAAC,CAAC;eACJ,CAAC,CAAC;WACJ;UACD,OAAO,MAAM,CAAC,aAAa,CAAC;OAC7B;MAED,OAAO,eAAe,CAAC;EACzB,CAAC;EAED;EACA,eAAe,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC;;;;"}